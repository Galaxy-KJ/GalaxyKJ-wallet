import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "@/app/globals.css";
import { StarBackground } from "@/components/effects/star-background";
import { LanguageProvider } from "@/contexts/language-provider";
import { SecureKeyProvider } from "@/contexts/secure-key-context";
import { AnalyticsProvider } from "@/components/ui/analytics-provider";
import { ErrorBoundary } from "@/components/ui/error-boundary";
import { Suspense, type ReactNode } from "react";
import ClientShell from "@/components/root/client-shell";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
  display: "swap", // Optimize font loading
  preload: true,
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
  display: "swap", // Optimize font loading
  preload: false, // Lazy load mono font
});

export const metadata: Metadata = {
  title: "Galaxy Smart Wallet",
  description: "Generated by Create Next App",
  icons: {
    icon: "/galaxy-smart-wallet-logo.svg",
  },
};

export default function RootLayout({
  children,
}: Readonly<{
  children: ReactNode;
}>) {
  return (
    <html lang="en">
      <head>
        {/* Preload critical resources */}
        <link
          rel="preload"
          href="/galaxy-smart-wallet-logo.svg"
          as="image"
          type="image/svg+xml"
        />
        {/* DNS prefetch for external resources */}
        <link rel="dns-prefetch" href="https://api.stellar.org" />
        <link rel="dns-prefetch" href="https://horizon.stellar.org" />
        {/* Preconnect to critical origins */}
        <link rel="preconnect" href="https://fonts.gstatic.com" crossOrigin="" />
      </head>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased relative bg-[#0A0B1E] text-white`}
        suppressHydrationWarning={true}
      >
        <ErrorBoundary>
          <SecureKeyProvider>
            <AnalyticsProvider>
              <LanguageProvider>
                <Suspense fallback={<div className="fixed inset-0 bg-[#0A0B1E]" />}>
                  <StarBackground />
                </Suspense>
                <main className="relative z-10 min-h-screen">
                  <Suspense fallback={
                    <div className="flex items-center justify-center min-h-screen">
                      <div className="animate-spin rounded-full h-8 w-8 border-b-2 border-purple-500"></div>
                    </div>
                  }>
                    {children}
                  </Suspense>
                </main>
                <ClientShell />
              </LanguageProvider>
            </AnalyticsProvider>
          </SecureKeyProvider>
        </ErrorBoundary>
      </body>
    </html>
  );
}
